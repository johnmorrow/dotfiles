# Set default shell for new panes
set -g default-shell $SHELL

# Use Emacs key bindings in the status line
set-option -g status-keys emacs

# Use Vim key bindings in copy mode
setw -g mode-keys vi

# Fix ESC delay in Vim mode
set -g escape-time 10

# Double press prefix commands
bind C-a send-prefix
bind C-l send-keys 'C-l'

# Break pane into new window, maintaining focus on current window
bind b break-pane -d

# Terminal overrides for color support
set-option -sa terminal-overrides ",xterm*:Tc"

# Prefix key configuration to Ctrl+a, unbind default Ctrl+b
set-option -g prefix C-a
unbind-key C-b
bind-key C-a last-window
bind-key a send-prefix

# Reload tmux configuration with prefix+r
bind-key r source-file ~/.config/tmux/tmux.conf \; display "Config reloaded."

# Navigation between windows with various bindings
bind-key space next-window
bind-key C-space next-window
bind-key n next-window
bind-key C-n next-window
bind-key p previous-window
bind-key C-p previous-window
unbind '"'
bind '"' choose-window

# Window splitting shortcuts
unbind %
bind-key = next-layout
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# Start window and pane indexing from 1
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# Pane resizing bindings
bind -r h resize-pane -L 5
bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5

# Smart pane switching with Vim awareness
# Decides if in a Vim process for navigation overrides
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
# Conditional bindings for tmux versions before and after 3.0
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# Status bar configuration with dynamic colors based on light or dark theme
set -g status on
set -g status-interval 1
set -g status-style bg=colour016,fg=colour242
set -g status-right '#[fg=colour172,bg=colour016,nobold]'
set -g status-left '#[fg=colour172,bg=colour016,nobold] '
set -g window-status-current-format "#[fg=colour178,bg=colour016]#I:#W#[fg=colour178,bg=colour016]"
# Light theme adjustments
if-shell "test -f ~/.terminal.light" "set -g status-bg colour255; set -g status-fg colour000; set -g status-right '#[fg=colour069,bg=colour255,nobold]'; set -g status-left '#[fg=colour069,bg=colour255,nobold] '; set -g window-status-current-format '#[fg=colour000,bg=colour252]#I:#W#[fg=colour000,bg=colour253]'"

# Activity monitoring and window status formatting
set -g window-status-format "#I:#W"
setw -g automatic-rename off
setw -g monitor-activity on
setw -g window-status-activity-style fg=red,bg=default,none

# Vim mode, history size, active window highlighting
setw -g mode-keys vi
set -g history-limit 1000
setw -g window-status-current-style bg=blue
set -g pane-active-border-style bg=default,fg=white
set -g pane-border-style fg=colour240

# Clock, visual bell, 256 color support, mouse, and plugins configuration
setw -g clock-mode-colour green
setw -g clock-mode-style 24
set-option -g visual-bell on
set -g default-terminal "xterm-256color"
setw -g aggressive-resize on
set-option -g history-limit 100000
set -g mouse on

# Plugin list
set -g @catppuccin_flavour 'mocha'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'tmux-plugins/tmux-yank'

# Enhanced copy-mode bindings for selection and system clipboard integration
# Uncommented previous conflicting bindings and added new ones for clarity
bind c new-window -c '#{pane_current_path}'
set-environment -g PATH "/usr/local/bin:/bin:/usr/bin"

# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
run '~/.tmux/plugins/tpm/tpm'
