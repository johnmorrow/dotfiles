# Default shell
set -g default-shell $SHELL

# Use emacs key bindings in status line
set-option -g status-keys emacs

# Use vim key bindings in copy mode
setw -g mode-keys vi

# Fix ESC delay in vim
set -g escape-time 10

# Send command on double press
bind C-a send-prefix
bind C-l send-keys 'C-l'

# Break pane into new window and keep focus on the current window
bind b break-pane -d

set-option -sa terminal-overrides ",xterm*:Tc"

#
# use ctrl-a
#
set-option -g prefix C-a
unbind-key C-b
bind-key C-a last-window
bind-key a send-prefix

#
# config reload
#
bind-key r source-file ~/.config/tmux/tmux.conf \; display "Config reloaded."

# move between windows
bind-key space next-window
bind-key C-space next-window
bind-key n next-window
bind-key C-n next-window
bind-key p previous-window
bind-key C-p previous-window
unbind '"'
bind '"' choose-window

# layouts
unbind %
bind-key = next-layout
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# start from 1
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# Pane
bind -r h resize-pane -L 5
bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

# status bar
set -g status on
set -g status-interval 1

set -g status-style bg=colour016,fg=colour242
set -g status-right '#[fg=colour172,bg=colour016,nobold]'
set -g status-left '#[fg=colour172,bg=colour016,nobold] '
set -g window-status-current-format "#[fg=colour178,bg=colour016]#I:#W#[fg=colour178,bg=colour016]"

if-shell "test -f ~/.terminal.light" "set -g status-bg colour255"
if-shell "test -f ~/.terminal.light" "set -g status-fg colour000"
if-shell "test -f ~/.terminal.light" "set -g status-right '#[fg=colour069,bg=colour255,nobold]'"
if-shell "test -f ~/.terminal.light" "set -g status-left '#[fg=colour069,bg=colour255,nobold] '"
if-shell "test -f ~/.terminal.light" "set -g window-status-current-format '#[fg=colour000,bg=colour252]#I:#W#[fg=colour000,bg=colour253]'"

set -g window-status-format "#I:#W"
setw -g automatic-rename off
setw -g monitor-activity on
setw -g window-status-activity-style fg=red,bg=default,none

# Copy mode
#unbind [
#bind Escape copy-mode
#bind -T copy-mode-vi V send-keys -X begin-selection
#bind -T copy-mode-vi y send-keys -X copy-pipe clipit
#set -s copy-command 'xsel -i'

# Use Vi mode
setw -g mode-keys vi

# History
set -g history-limit 1000

# Highlighting the active window
setw -g window-status-current-style bg=blue
set -g pane-active-border-style bg=default,fg=white
set -g pane-border-style fg=colour240

# Clock
setw -g clock-mode-colour green
setw -g clock-mode-style 24

# Visual bell
set-option -g visual-bell on

# 256 colors
set -g default-terminal "xterm-256color"

# resize to largest attached window
setw -g aggressive-resize on

# huge scrollback
set-option -g history-limit 100000

# enable mouse
set -g mouse on

# plugins
set -g @catppuccin_flavour 'mocha'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'tmux-plugins/tmux-yank'

# Copy-mode
#unbind-key -T copy-mode-vi v
#bind-key -T copy-mode-vi v send-keys -X begin-selection
#bind-key -T copy-mode-vi 'C-v' send-keys -X rectangle-toggle
#bind-key -T copy-mode-vi y send-keys -X copy-pipe "pbcopy"
#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
#bind-key -T copy-mode-vi Escape send-keys -X cancel

# copy and paste
bind -T copy-mode    DoubleClick1Pane select-pane \; send -X select-word \; send -X copy-pipe-no-clear "xsel -i"
bind -T copy-mode-vi DoubleClick1Pane select-pane \; send -X select-word \; send -X copy-pipe-no-clear "xsel -i"
bind -n DoubleClick1Pane select-pane \; copy-mode -M \; send -X select-word \; send -X copy-pipe-no-clear "xsel -i"
bind -T copy-mode    TripleClick1Pane select-pane \; send -X select-line \; send -X copy-pipe-no-clear "xsel -i"
bind -T copy-mode-vi TripleClick1Pane select-pane \; send -X select-line \; send -X copy-pipe-no-clear "xsel -i"
bind -n TripleClick1Pane select-pane \; copy-mode -M \; send -X select-line \; send -X copy-pipe-no-clear "xsel -i"
bind -n MouseDown2Pane run "tmux set-buffer -b primary_selection \"$(xsel -o)\"; tmux paste-buffer -b primary_selection; tmux delete-buffer -b primary_selection"
set -g @yank_action 'copy-pipe-no-clear'
bind -T copy-mode    C-c send -X copy-pipe-no-clear "xsel -i --clipboard"
bind -T copy-mode-vi C-c send -X copy-pipe-no-clear "xsel -i --clipboard"

# Remember current path when creating new windows
bind c new-window -c '#{pane_current_path}'

set-environment -g PATH "/usr/local/bin:/bin:/usr/bin"
run '~/.tmux/plugins/tpm/tpm'
